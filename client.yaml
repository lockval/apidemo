
- name: read and write kv
  comment: |
    this is a read and write kv example, Count increments by 1
    keywords: **GetSubVal, GetAndLock, PutSubVal, PutAndUnlock**
  KeySubList:
    - name: mBase
      comment: Count is a counter
  Call: 
      name: testBaseCount
      comment: 


- name: request and response
  comment: |
    this is a request and response example
    keywords: **input.Requ**
  KeySubList: []
  Call: 
      name: testRequResp
      comment: 
      params:
        param1: string
        param2: number
        param3: boolean

- name: list queue mode
  comment: |
    In order, push data to the end of the list, and excess data will shift out from the front
    keywords: **List(**
  KeySubList:
    - name: mList
      comment: list mode
  Call: 
      name: testListQueue
      comment: 
      params:
        first: string
        second: string


- name: list stack mode
  comment: |
    First pop up the n pieces behind the old data, and then push data to the end of the list
    keywords: **List(**
  KeySubList:
    - name: mList
      comment: list mode
  Call: 
      name: testListStack
      comment: 
      params:
        n: number

- name: clear data
  comment:  |
    Clear data before doing anything
    keywords: **Clear(**
  KeySubList:
    - name: mList
      comment: list mode
  Call: 
      name: testClearData
      comment: 

- name: get all data
  comment:  |
    There are two ways to get all the data
    - **GetSubVal(input.UID, "mList")**
    - **GetSubValAll(input.UID, "mList")**
    
    other api: **DiscardAndUnlock**
    - like **PutAndUnlock**, but does not modify any data
  KeySubList: []
  Call: 
      name: testGetAll
      comment: 

- name: put link
  comment:  |
    Associate other KeySub when putting data
    keywords: **Link(**
  KeySubList:
    - name: mList
      comment: list mode
    - name: mListSlave
      comment: list mode
  Call: 
      name: testPutLink
      comment: 
      params:
        first: string
        second: string

- name: throw a user error
  comment: |
    like read and write kv, but execution is interrupted.
    keywords: **Throw(**
  KeySubList:
    - name: mBase
      comment: Count is a counter
  Call: 
      name: testThrow
      comment: 

- name: advanced query
  comment: |
    In addition to **GetSubVal** and **GetSubValAll**, we also provide other query methods.
    keywords: **Group, Len, Max, Min, Random, Range, Search, Sum, Unique, **
  KeySubList: []
  Call: 
      name: testOtherQuery
      comment: 